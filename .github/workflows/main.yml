# 当前工作流的名称
name: sub-web-deploy
on:
  push:
    branches:
      - master

jobs: # 构建的任务
  build-and-deploy:
    runs-on: ubuntu-latest # 在什么服务器上执行这些任务，这里使用最新版本的Ubuntu系统

    steps: # 构建任务的步骤，一个任务可分为多个步骤
      # 步骤1 切换分支
      - name: Checkout
        uses: actions/checkout@v4
      # 步骤2 安装Node.js
      - name: use node
        uses: actions/setup-node@v3.8.1
        with:
          node-version: 18
      # 步骤3 下载项目依赖
      - name: install
        run: npm install
      # 步骤4 打包Node.js项目
      - name: build
        run: npm run docs:build
      # 步骤5 部署项目到服务器
      - name: ssh deploy
        uses: easingthemes/ssh-deploy@v4.1.10
        with:
          # SSH密钥的私钥部分
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          # 远程主机地址
          REMOTE_HOST: ${{ secrets.SSH_KNOWN_HOSTS }}
          # 远程主机用户名
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          # 源目录，相对于 `$GITHUB_WORKSPACE` 的根路径，例如：`dist/`
          SOURCE: "/src/.vuepress/dist/"
          # 目标目录
          TARGET: "/www/wwwroot/www.fanliu.top/dist/"

      # 步骤6 克隆 fanrujiang.github.io 仓库并切换到 pages 分支
      - name: Clone GitHub Pages Repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone --branch=pages https://${{ secrets.GITHUB_TOKEN }}@github.com/fanrujiang/fanrujiang.github.io.git
          cd fanrujiang.github.io

      # 步骤7 将打包后的文件复制到 pages 分支
      - name: Copy files to GitHub Pages repository
        run: |
          rm -rf ./*
          cp -r ../src/.vuepress/dist/* ./

      # 步骤8 提交并推送到 pages 分支
      - name: Commit and Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Deploy updates to GitHub Pages"
          git push origin pages
